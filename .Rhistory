pre_entry1 <- arrange(pre_entry1, -percent)
# Create color vector to identify alachua
color <- ifelse(pre_entry1$agency_name == 'Alachua', 'red', "black")
# create object that is percent for Alachua
per_alachua <- pre_entry1$percent[which(pre_entry1$agency == 'Alachua')]
# Bargraph
ggplot(data = pre_entry1, aes(reorder(agency_name, -percent), percent)) +
geom_bar(stat = 'identity', fill = color, alpha = 0.7, colour = 'darkgrey') +
xlab('') +
ylab('Percent') +
ggtitle('Percent of Prenatal Women Enrolling in WIC in the First Trimester') +
scale_x_discrete(breaks = c("Alachua")) +
theme(axis.text.x  = element_text(size = 14, colour = 'black'),
axis.text.y = element_text(size = 14, colour = 'black'),
axis.title.y = element_text(size = 14)) + theme_hc()
# Make percent
ever_bf1$percent <- (ever_bf1$ever_bf/ever_bf1$all_infants_children)*100
ever_bf1$percent <- round(ever_bf1$percent, 2)
# arrange ever_bf1 descending by percent
ever_bf1 <- arrange(ever_bf1, -percent)
# Create color vector to identify alachua
color <- ifelse(ever_bf1$agency == 'Alachua', 'red', "black")
# create object that is percent for Alachua
per_alachua <- ever_bf1$percent[which(ever_bf1$agency == 'Alachua')]
# barplot
ggplot(data = ever_bf1, aes(reorder(agency, -percent), percent)) +
geom_bar(stat = 'identity', fill = color, alpha = 0.7, colour = 'darkgrey') +
xlab('') +
ylab('Percent') +
ggtitle('Percent of Infants Ever Breastfed by WIC Moms') +
scale_x_discrete(breaks = c("Alachua")) +
theme(axis.text.x  = element_text(size = 14, colour = 'black'),
axis.text.y = element_text(size = 14, colour = 'black'),
axis.title.y = element_text(size = 14)) + theme_hc()
# Histogram of Percent
ggplot(data = ever_bf1, aes(percent)) +
geom_histogram(binwidth = 3, fill = 'black', colour = 'grey', alpha = 0.7) +
geom_vline(xintercept = per_alachua, colour = 'red') +
ylab('Count') + xlab('Percent') +
ggtitle('Historgram of Percent Breastfed by WIC Moms') +
theme(axis.text.x  = element_text(size = 14, colour = 'black'),
axis.text.y = element_text(size = 14, colour = 'black'),
axis.title.y = element_text(size = 14)) +
geom_text(aes(per_alachua-1, 10, label = "Alachua"), colour = 'red') + theme_hc()
# Through time, use percent_ever
# First create and indicator for Alachua and group by indicator
percent_ever1$County <- ifelse(percent_ever1$agency_name == 'ALACHUA', 'Alachua', 'Not Alachua')
temp <- percent_ever1 %>%
group_by(County, date) %>%
summarise(per_avg = mean(percent, na.rm = T))
ggplot(data = temp, aes(date, per_avg, group = County, color = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('Percent Breastfed <= 24 Months') +
ylim(60, 90) + xlab('Date') + ylab('Percent') +
theme(axis.text.x  = element_text(size = 12, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
library(knitr)
source("read_in.R")
source('helpers.R')
ffy_2015_1$percent <- (ffy_2015_1$participation/ffy_2015_1$eligible)*100
ffy_2015_1$percent <- round(ffy_2015_1$percent, 2)
# arrange by percent
ffy_2015_1 <- arrange(ffy_2015_1, -percent)
# create indicator for alachua
ffy_2015_1$County <- ifelse(ffy_2015_1$agency == '*Alachua', 'Alachua', 'Not Alachua')
# group by column indicator
temp <- ffy_2015_1 %>%
group_by(County, date) %>%
summarise(per_mean = mean(percent, na.rm = T))
# create color vector
color <- ifelse(temp$County == 'Alachua', 'red', 'black')
# Create line graph
ggplot(data = temp, aes(date, per_mean, group = County, colour = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('Average WIC Participation') +
ylim(50, 90) + xlab('Date') + ylab('Percent Participated') +
theme(axis.text.x  = element_text(size = 12, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
pre_entry1$percent <- NA
for(i in 1:nrow(pre_entry1)){
pre_entry1$percent[i] <- (pre_entry1$certified_first_tri[i]/pre_entry1$all_prenatals[i])*100
pre_entry1$percent[i] <- round(pre_entry1$percent[i], 2)
}
# arrange ever_bf1 descending by percent
pre_entry1 <- arrange(pre_entry1, -percent)
# Create color vector to identify alachua
color <- ifelse(pre_entry1$agency_name == 'Alachua', 'red', "black")
# create object that is percent for Alachua
per_alachua <- pre_entry1$percent[which(pre_entry1$agency == 'Alachua')]
# Bargraph
ggplot(data = pre_entry1, aes(reorder(agency_name, -percent), percent)) +
geom_bar(stat = 'identity', fill = color, alpha = 0.7, colour = 'darkgrey') +
xlab('') +
ylab('Percent') +
ggtitle('Percent of prenatal women enrolling in WIC in the first trimester') +
scale_x_discrete(breaks = c("Alachua")) +
theme(axis.text.x  = element_text(size = 14, colour = 'black'),
axis.text.y = element_text(size = 14, colour = 'black'),
axis.title.y = element_text(size = 14)) + theme_hc()
ggplot(data = pre_entry1, aes(percent)) +
geom_histogram(binwidth = 3, fill = 'black', colour = 'grey', alpha = 0.7) +
geom_vline(xintercept = per_alachua, colour = 'red') +
ylab('Count') + xlab('Percent') +
ggtitle('Historgram of prenatal women enrolling in WIC in the first trimester') +
theme(axis.text.x  = element_text(size = 14, colour = 'black'),
axis.text.y = element_text(size = 14, colour = 'black'),
axis.title.y = element_text(size = 14)) +
geom_text(aes(per_alachua-1, 10, label = "Alachua"), colour = 'red') + theme_hc()
# Bargraph
bar <- ggplot(data = pre_entry1, aes(reorder(agency_name, -percent), percent)) +
geom_bar(stat = 'identity', fill = color, alpha = 0.7, colour = 'darkgrey') +
xlab('') +
ylab('Percent') +
ggtitle('Percent of prenatal women enrolling in WIC in the first trimester') +
scale_x_discrete(breaks = c("Alachua")) +
theme(axis.text.x  = element_text(size = 14, colour = 'black'),
axis.text.y = element_text(size = 14, colour = 'black'),
axis.title.y = element_text(size = 14)) + theme_hc()
# historgram
hist <- ggplot(data = pre_entry1, aes(percent)) +
geom_histogram(binwidth = 3, fill = 'black', colour = 'grey', alpha = 0.7) +
geom_vline(xintercept = per_alachua, colour = 'red') +
ylab('Count') + xlab('Percent') +
ggtitle('Historgram of prenatal women enrolling in WIC in the first trimester') +
theme(axis.text.x  = element_text(size = 14, colour = 'black'),
axis.text.y = element_text(size = 14, colour = 'black'),
axis.title.y = element_text(size = 14)) +
geom_text(aes(per_alachua-1, 10, label = "Alachua"), colour = 'red') + theme_hc()
multiplot(bar, hist, cols = 2)
bar <- ggplot(data = pre_entry1, aes(reorder(agency_name, -percent), percent)) +
geom_bar(stat = 'identity', fill = color, alpha = 0.7, colour = 'darkgrey') +
xlab('') +
ylab('Percent') +
ggtitle('Percent of WIC prenatal enrollment in first trimester') +
scale_x_discrete(breaks = c("Alachua")) +
theme(axis.text.x  = element_text(size = 14, colour = 'black'),
axis.text.y = element_text(size = 14, colour = 'black'),
axis.title.y = element_text(size = 14)) + theme_hc()
# historgram
hist <- ggplot(data = pre_entry1, aes(percent)) +
geom_histogram(binwidth = 3, fill = 'black', colour = 'grey', alpha = 0.7) +
geom_vline(xintercept = per_alachua, colour = 'red') +
ylab('Count') + xlab('Percent') +
ggtitle('Historgram of WIC prenatal enrollment in first trimester') +
theme(axis.text.x  = element_text(size = 14, colour = 'black'),
axis.text.y = element_text(size = 14, colour = 'black'),
axis.title.y = element_text(size = 14)) +
geom_text(aes(per_alachua-1, 10, label = "Alachua"), colour = 'red') + theme_hc()
multiplot(bar, hist, cols = 2)
head(first_tri_enroll1)
min(first_tri_enroll1$date)
first_tri_enroll2
first_tri_time1
head(first_tri_enroll1)
ggplot(data = first_tri_enroll1, aes(date, participation, group = agency, colour = agency)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('Average WIC Participation') +
ylim(50, 90) + xlab('Date') + ylab('Percent Participated') +
theme(axis.text.x  = element_text(size = 12, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
```
pre_entry1$County <- ifelse(pre_entry1$agency_name == 'Alachua', 'Alachua', 'Other Counties')
first_tri_enroll1$County <- ifelse(first_tri_enroll1$agency_name == 'Alachua', 'Alachua', 'Other Counties')
# Group by indicator
temp <- first_tri_enroll1 %>%
group_by(County, date) %>%
summarise(per_mean = mean(percent, na.rm = T))
color <- ifelse(temp$County == 'Alachua', 'red', 'black')
# Create line graph
ggplot(data = temp, aes(date, per_mean, group = County, colour = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(50, 90) + xlab('Date') + ylab('Percent Participated') +
theme(axis.text.x  = element_text(size = 12, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
View(temp)
temp <- ffy_2015_1 %>%
group_by(County, date) %>%
summarise(per_mean = mean(percent, na.rm = T))
View(temp)
temp <- first_tri_enroll1 %>%
group_by(County, date) %>%
summarise(per_mean = mean(percent, na.rm = T))
View(temp)
temp <- first_tri_enroll1 %>%
group_by(County, date) %>%
summarise(per_mean = mean(percent, na.rm = T))
first_tri_enroll1$County <- ifelse(first_tri_enroll1$agency_name == 'Alachua', 'Alachua', 'Other Counties')
source("read_in.R")
source('helpers.R')
first_tri_enroll1
first_tri_enroll1$County <- ifelse(first_tri_enroll1$agency == 'Alachua', 'Alachua', 'Other Counties')
# Group by indicator
temp <- first_tri_enroll1 %>%
group_by(County, date) %>%
summarise(per_mean = mean(percent, na.rm = T))
temp <- first_tri_enroll1 %>%
group_by(County, date) %>%
summarise(per_mean = mean(participation, na.rm = T))
str(temp)
color <- ifelse(temp$County == 'Alachua', 'red', 'black')
# Create line graph
ggplot(data = temp, aes(date, per_mean, group = County, colour = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(50, 90) + xlab('Date') + ylab('Percent Participated') +
theme(axis.text.x  = element_text(size = 12, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
ggplot(data = temp, aes(date, per_mean, group = County, colour = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(50, 80) + xlab('Date') + ylab('Percent Participated') +
theme(axis.text.x  = element_text(size = 12, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
# create indicator for alachua
first_tri_enroll1$County <- ifelse(first_tri_enroll1$agency == 'Alachua', 'Alachua', 'Other Counties')
# Group by indicator
temp <- first_tri_enroll1 %>%
group_by(County, date) %>%
summarise(per_mean = mean(participation, na.rm = T))
# create color vector
color <- ifelse(temp$County == 'Alachua', 'red', 'black')
# Create line graph
ggplot(data = temp, aes(date, per_mean, group = County, colour = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(50, 80) + xlab('Date') + ylab('Percent Participated') +
theme(axis.text.x  = element_text(size = 12, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
first_tri_enroll1$County <- ifelse(first_tri_enroll1$agency == 'Alachua', 'Alachua', 'Other Counties')
# Group by indicator
temp <- first_tri_enroll1 %>%
group_by(County, date) %>%
summarise(per_mean = mean(participation, na.rm = T))
# create color vector
color <- ifelse(temp$County == 'Alachua', 'red', 'black')
# Create line graph
ggplot(data = temp, aes(date, per_mean, group = County, colour = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(50, 80) + xlab('Date') + ylab('Percent Participated') +
theme(axis.text.x  = element_text(size = 12, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
head(first_tri_time1)
View(first_tri_time1)
summary(first_tri_time1$class)
summary(as.factor(first_tri_time1$class)
)
first_tri_time1 <- first_tri_time1[first_tri_time1$class == 'Percent clients certified in 1st trimester',]
head(first_tri_time1)
str(first_tri_time1)
source("read_in.R")
source('helpers.R')
first_tri_time1 <- first_tri_time1[first_tri_time1$class == 'Percent clients certified in 1st trimester',]
str(first_tri_t)
str(first_tri_time1)
?paste0
names(first_tri_time1)
temp <- as.Date(paste0(first_tri_time1$year, first_tri_time1$quarter, sep = '-'))
temp <- paste0(first_tri_time1$year, first_tri_time1$quarter, sep = '-')
temp
first_tri_time1 <- read_excel('data/First_Trimester_Entry_Into_WIC_By_Time_Period.xlsx', 1, col_names = FALSE)
x = first_tri_time1
x <- x[, colSums(is.na(x)) < nrow(x)]
# drop first row
x$X0 <- NULL
# Get first column name
names(x)[1] <- 'county'
# Standardize column names for the rest of the data
for (j in 2:ncol(x)){
column_indicator <- j
# manipulate the date objects
if(j == ncol(x)){
column_indicator <- column_indicator - 1
}else{
if(is.na(x[2,column_indicator])){
column_indicator <- column_indicator +1
if(is.na(x[2, column_indicator])){
column_indicator <- column_indicator - 2
}
}
}
# Fix column indicator for last column
column_indicator <- ifelse(column_indicator > ncol(x),
ncol(x)-1, column_indicator)
# Get the date object
date_object <- unlist(strsplit(as.character(x[2,column_indicator]), ' - '))
# Deal with differential number vs. hyphenated date stuff
if(length(date_object) == 2){
date_object <- date_object[length(date_object)]
# Extract the quarter
quarter <- ifelse(grepl('Mar', date_object), 1,
ifelse(grepl('Jun', date_object), 2,
ifelse(grepl('Sep', date_object), 3,
ifelse(grepl('Dec', date_object), 4, NA))))
# Extract the year
year <- as.numeric(unlist(strsplit(date_object, '-'))[2])
} else {
# Convert from excel to r date
date_object <- as.Date(as.numeric(date_object), origin = '1899-12-30')
# Extract the quarter
month <- as.numeric(format(date_object, '%m'))
quarter <- ((month-1) %/% 3) + 1
# Extract the year
year <- as.numeric(format(date_object, '%Y'))
}
# Paste together the quarter, year and third row info
column_name <- paste0(year,"_", quarter,"_", x[3,j])
# Stick that column name where it belongs
names(x)[j] <- column_name
}
# remove first 3 rows
x <- x[4:nrow(x),]
# gather
x <- gather(x, key, value, 2:ncol(x))
# strsplit the key on underscore creating year, quarter and description columns
list <- strsplit(as.character(x$key), '_')
# turn list into data table object
temp <- ldply(list)
# make column names
colnames(temp) <- c("year", "quarter", "class")
# put back into x
x <- cbind(x, temp)
# remove extra columns in x
x <- x[, c("county", "year", "quarter", "class", "value")]
# remove state
x <- x[x$county != 'State',]
# remove if "As of"
x <- x[!grepl("As of", x$county),]
# make as numeric
x$value <- as.numeric(x$value)
x <- x[x$class == 'Percent clients certified in 1st trimester',]
View(x)
x$time <- paste0(x$year, x$quarter, sep = '-')
View(x)
str(x)
x$time <- paste0(as.numeric((x$year, x$quarter, sep = '-'))
x$time <- paste0(as.numeric((x$year, x$quarter, sep = '-'))
x$time <- paste0(as.numeric(x$year, x$quarter, sep = '-'))
View(x)
x$time <- paste0(as.numeric(x$year), as.numeric(x$quarter), sep = '-'))
x$time <- paste0(as.numeric(x$year), as.numeric(x$quarter), sep = '-')
View(x)
x$time <- paste0(x$year, x$quarter, collapse = '-')
View(x)
x = first_tri_time1
# subset x by removing columns that are filled entirely with NAs
x <- x[, colSums(is.na(x)) < nrow(x)]
# drop first row
x$X0 <- NULL
# Get first column name
names(x)[1] <- 'county'
# Standardize column names for the rest of the data
for (j in 2:ncol(x)){
column_indicator <- j
# manipulate the date objects
if(j == ncol(x)){
column_indicator <- column_indicator - 1
}else{
if(is.na(x[2,column_indicator])){
column_indicator <- column_indicator +1
if(is.na(x[2, column_indicator])){
column_indicator <- column_indicator - 2
}
}
}
# Fix column indicator for last column
column_indicator <- ifelse(column_indicator > ncol(x),
ncol(x)-1, column_indicator)
# Get the date object
date_object <- unlist(strsplit(as.character(x[2,column_indicator]), ' - '))
# Deal with differential number vs. hyphenated date stuff
if(length(date_object) == 2){
date_object <- date_object[length(date_object)]
# Extract the quarter
quarter <- ifelse(grepl('Mar', date_object), 1,
ifelse(grepl('Jun', date_object), 2,
ifelse(grepl('Sep', date_object), 3,
ifelse(grepl('Dec', date_object), 4, NA))))
# Extract the year
year <- as.numeric(unlist(strsplit(date_object, '-'))[2])
} else {
# Convert from excel to r date
date_object <- as.Date(as.numeric(date_object), origin = '1899-12-30')
# Extract the quarter
month <- as.numeric(format(date_object, '%m'))
quarter <- ((month-1) %/% 3) + 1
# Extract the year
year <- as.numeric(format(date_object, '%Y'))
}
# Paste together the quarter, year and third row info
column_name <- paste0(year,"_", quarter,"_", x[3,j])
# Stick that column name where it belongs
names(x)[j] <- column_name
}
# remove first 3 rows
x <- x[4:nrow(x),]
# gather
x <- gather(x, key, value, 2:ncol(x))
# strsplit the key on underscore creating year, quarter and description columns
list <- strsplit(as.character(x$key), '_')
# turn list into data table object
temp <- ldply(list)
# make column names
colnames(temp) <- c("year", "quarter", "class")
# put back into x
x <- cbind(x, temp)
# remove extra columns in x
x <- x[, c("county", "year", "quarter", "class", "value")]
# remove state
x <- x[x$county != 'State',]
# remove if "As of"
x <- x[!grepl("As of", x$county),]
# make as numeric
x$value <- as.numeric(x$value)
# Keep only percent
x <- x[x$class == 'Percent clients certified in 1st trimester',]
#
x$time <- paste0(x$year, x$quarter, collapse = '-')
View(x)
x$time <- paste0(x$year, x$quarter, sep = '-',collapse = '-')
View(x)
x$time <- paste0(x$year, x$quarter)
View(x)
x$time <- paste0(x$year, x$quarter, "-")
View(x)
x$time <- paste0(x$year,  "-", x$quarter,)
x$time <- paste0(x$year,  "-", x$quarter)
View(x)
x$year <- ifelse(x$year == '14', '2014', x$year)
View(x)
x$time <- paste0(x$year,  "-", x$quarter)
View(x)
x$time <- as.Date(x$time, format = '%Y-%m')
View(x)
x$time <- paste0(x$year,  "-", x$quarter)
x$time <- paste0(x$year,  "/", x$quarter)
# change to date time
x$time <- as.Date(x$time, format = '%Y-%m')
View(x)
x$time <- paste0(x$year,  "/", x$quarter)
View(x)
x$time <- paste0(x$quarter,  "/", x$year)
# change to date time
x$time <- as.Date(x$time, format = '%Y-%m')
View(x)
x$time <- paste0(x$year,  "/", x$quarter)
View(x)
# Combine year and quarter into a date object
x$time <- paste0(x$year,  "0/", x$quarter)
View(x)
# Combine year and quarter into a date object
x$time <- paste0(x$year,  "/0", x$quarter)
View(x)
# change to date time
x$time <- as.Date(x$time, format = '%Y-%m')
View(x)
x$time <- paste0(x$year,  "-0", x$quarter)
# change to date time
x$time <- as.Date(x$time, format = '%Y-%m')
View(x)
x$time <- paste0(x$year,  "-0", x$quarter)
View(x)
# change to date time
x$time <- as.Date(as.numeric(x$time), format = '%Y-%m')
View(x)
str(x)
x$time <- as.Date(x$time, format = '%Y-%m')
View(x)
x$time <- paste0(x$year,  "-0", x$quarter)
View(x)
x$time <- paste0(x$time, "-01")
View(x)
x$time <- as.Date(x$time, format = '%Y-%m')
View(x)
x$time <- paste0(x$year,  "-0", x$quarter)
x$time <- paste0(x$time, "-01")
# change to date time
x$time <- as.Date(x$time, format = '%Y-%m-%d')
View(x)
str(x)
source("read_in.R")
source('helpers.R')
first_tri_time1
##### Read in sheet from First_Trimester_Entry_Into_WIC_By_Time_Period.xlsx
first_tri_time1 <- read_excel('data/First_Trimester_Entry_Into_WIC_By_Time_Period.xlsx', 1, col_names = FALSE)
View(first_tri_time1)
first_tri_time1$County <- ifelse(first_tri_time1$county == 'Alachua', 'Alachua', 'Other Counties')
head(first_tri_time1)
source("read_in.R")
source('helpers.R')
head(first_tri_time1)
str(first_tri_time1)
?gsub
source("read_in.R")
source('helpers.R')
