# split class to separate date
x <- cSplit(x, "class", "_", fixed = FALSE)
x <- as.data.frame(x)
# fill class_7 NAS with 0
x$class_7 <- as.character(x$class_7)
x[is.na(x)] <- 0
# create new column that with weight status
x$weight_status <- ifelse(as.factor(x$class_7) == '(Overwt)', 'overweight', 'obese')
# keep only necessary columns
x <- x[, c("county","percent", "class_1", "class_2", "weight_status")]
# rename columns
names(x) <- c("county", "percent", "month", "year", "weight_status")
# make date object
x
str(over_obese1)
View(x)
x = over_obese1
names(x)[1] <- "county"
for(j in 2:ncol(x)){
temp <- gsub("\\s+", "_", x[1,j])
names(x)[j] <- temp
}
# drop first row
x <- x[2:nrow(x),]
View(x)
x <- gather(x, class, percent, 2:ncol(x))
x <- x[2:nrow(x),]
# gather x
x <- gather(x, class, percent, 2:ncol(x))
x = over_obese1
x$X0 <- NULL
# drop rows with all NAs
x <- x[complete.cases(x),]
# remove columns with "or"
for(j in 2:ncol(x)){
if(grepl("or", x[1,j])){
x[,j] <- NULL
}
}
# change names of columns
names(x)[1] <- "county"
for(j in 2:ncol(x)){
temp <- gsub("\\s+", "_", x[1,j])
names(x)[j] <- temp
}
# drop first row
x <- x[2:nrow(x),]
# gather x
x <- gather(x, class, percent, 2:ncol(x))
View(x)
x <- cSplit(x, "class", "_", fixed = FALSE)
View(x)
x <- as.data.frame(x)
# fill class_7 NAS with 0
x$class_7 <- as.character(x$class_7)
x[is.na(x)] <- 0
View(x)
# create new column that with weight status
x$weight_status <- ifelse(as.factor(x$class_7) == '(Overwt)', 'overweight', 'obese')
View(x)
# keep only necessary columns
x <- x[, c("county","percent", "class_1", "class_2", "weight_status")]
View(x)
# rename columns
names(x) <- c("county", "percent", "month", "year", "weight_status")
View(x)
x$year <- ifelse(x$year == 'Mar', 2014, x$year)
View(x)
x = over_obese1
# drop first row
x$X0 <- NULL
# drop rows with all NAs
x <- x[complete.cases(x),]
# remove columns with "or"
for(j in 2:ncol(x)){
if(grepl("or", x[1,j])){
x[,j] <- NULL
}
}
# change names of columns
names(x)[1] <- "county"
for(j in 2:ncol(x)){
temp <- gsub("\\s+", "_", x[1,j])
names(x)[j] <- temp
}
# drop first row
x <- x[2:nrow(x),]
# gather x
x <- gather(x, class, percent, 2:ncol(x))
# split class to separate date
x <- cSplit(x, "class", "_", fixed = FALSE)
x <- as.data.frame(x)
# fill class_7 NAS with 0
x$class_7 <- as.character(x$class_7)
x[is.na(x)] <- 0
# create new column that with weight status
x$weight_status <- ifelse(as.factor(x$class_7) == '(Overwt)', 'overweight', 'obese')
# keep only necessary columns
x <- x[, c("county","percent", "class_1", "class_2", "weight_status")]
# rename columns
names(x) <- c("county", "percent", "month", "year", "weight_status")
# fill blank space with 2014
x$year <- ifelse(x$year == 'Mar', '2014', x$year)
View(x)
x = over_obese1
# drop first row
x$X0 <- NULL
# drop rows with all NAs
x <- x[complete.cases(x),]
# remove columns with "or"
for(j in 2:ncol(x)){
if(grepl("or", x[1,j])){
x[,j] <- NULL
}
}
# change names of columns
names(x)[1] <- "county"
for(j in 2:ncol(x)){
temp <- gsub("\\s+", "_", x[1,j])
names(x)[j] <- temp
}
# drop first row
x <- x[2:nrow(x),]
# gather x
x <- gather(x, class, percent, 2:ncol(x))
# split class to separate date
x <- cSplit(x, "class", "_", fixed = FALSE)
x <- as.data.frame(x)
# fill class_7 NAS with 0
x$class_7 <- as.character(x$class_7)
x[is.na(x)] <- 0
# create new column that with weight status
x$weight_status <- ifelse(as.factor(x$class_7) == '(Overwt)', 'overweight', 'obese')
# keep only necessary columns
x <- x[, c("county","percent", "class_1", "class_2", "weight_status")]
# rename columns
names(x) <- c("county", "percent", "month", "year", "weight_status")
# fill blank space with 2014
View(x)
str(x)
summary(x$ye)
summary(x$year)
# fill blank space with 2014
x$year <- ifelse(x$year == 'Mar', '2014', x$year)
View(x)
x = over_obese1
# drop first row
x$X0 <- NULL
# drop rows with all NAs
x <- x[complete.cases(x),]
# remove columns with "or"
for(j in 2:ncol(x)){
if(grepl("or", x[1,j])){
x[,j] <- NULL
}
}
# change names of columns
names(x)[1] <- "county"
for(j in 2:ncol(x)){
temp <- gsub("\\s+", "_", x[1,j])
names(x)[j] <- temp
}
# drop first row
x <- x[2:nrow(x),]
# gather x
x <- gather(x, class, percent, 2:ncol(x))
# split class to separate date
x <- cSplit(x, "class", "_", fixed = FALSE)
x <- as.data.frame(x)
# fill class_7 NAS with 0
x$class_7 <- as.character(x$class_7)
x[is.na(x)] <- 0
# create new column that with weight status
x$weight_status <- ifelse(as.factor(x$class_7) == '(Overwt)', 'overweight', 'obese')
# keep only necessary columns
x <- x[, c("county","percent", "class_1", "class_2", "weight_status")]
# rename columns
names(x) <- c("county", "percent", "month", "year", "weight_status")
# fill blank space with 2014
x$year <- as.character(x$year)
x$month <- as.character(x$month)
x$year <- ifelse(x$year == 'Mar', '2014', x$year)
View(x)
x$month <- ifelse(x$month == '', 'Mar')
x$month <- ifelse(x$month == '', 'Mar', x$month)
View(x)
source("read_in.R")
source('helpers.R')
over_obese1
str(over_obese1)
x$time <- paste0(x$year, '-', x$month)
x = over_obese1
# drop first row
x$X0 <- NULL
# drop rows with all NAs
x <- x[complete.cases(x),]
# remove columns with "or"
for(j in 2:ncol(x)){
if(grepl("or", x[1,j])){
x[,j] <- NULL
}
}
# change names of columns
names(x)[1] <- "county"
for(j in 2:ncol(x)){
temp <- gsub("\\s+", "_", x[1,j])
names(x)[j] <- temp
}
# drop first row
x <- x[2:nrow(x),]
# gather x
x <- gather(x, class, percent, 2:ncol(x))
# split class to separate date
x <- cSplit(x, "class", "_", fixed = FALSE)
x <- as.data.frame(x)
# fill class_7 NAS with 0
x$class_7 <- as.character(x$class_7)
x[is.na(x)] <- 0
# create new column that with weight status
x$weight_status <- ifelse(as.factor(x$class_7) == '(Overwt)', 'overweight', 'obese')
# keep only necessary columns
x <- x[, c("county","percent", "class_1", "class_2", "weight_status")]
# rename columns
names(x) <- c("county", "percent", "month", "year", "weight_status")
# fill blank space with 2014
x$year <- as.character(x$year)
x$month <- as.character(x$month)
x$percent <- as.numeric(x$percent)
x$year <- ifelse(x$year == 'Mar', '2014', x$year)
x$month <- ifelse(x$month == '', 'Mar', x$month)
# put year month together and make date
over_obese1 <- read_excel('data/Overweight_And_Obese_Children.xlsx', 1, col_names = FALSE)
over_obese2 <- read_excel('data/Overweight_And_Obese_Children.xlsx', 2, col_names = FALSE)
x = over_obese1
x$X0 <- NULL
# drop rows with all NAs
x <- x[complete.cases(x),]
# remove columns with "or"
for(j in 2:ncol(x)){
if(grepl("or", x[1,j])){
x[,j] <- NULL
}
}
# change names of columns
names(x)[1] <- "county"
for(j in 2:ncol(x)){
temp <- gsub("\\s+", "_", x[1,j])
names(x)[j] <- temp
}
# drop first row
x <- x[2:nrow(x),]
# gather x
x <- gather(x, class, percent, 2:ncol(x))
# split class to separate date
x <- cSplit(x, "class", "_", fixed = FALSE)
x <- as.data.frame(x)
# fill class_7 NAS with 0
x$class_7 <- as.character(x$class_7)
x[is.na(x)] <- 0
# create new column that with weight status
x$weight_status <- ifelse(as.factor(x$class_7) == '(Overwt)', 'overweight', 'obese')
# keep only necessary columns
x <- x[, c("county","percent", "class_1", "class_2", "weight_status")]
# rename columns
names(x) <- c("county", "percent", "month", "year", "weight_status")
# fill blank space with 2014
x$year <- as.character(x$year)
x$month <- as.character(x$month)
x$percent <- as.numeric(x$percent)
x$year <- ifelse(x$year == 'Mar', '2014', x$year)
x$month <- ifelse(x$month == '', 'Mar', x$month)
# put year month together and make date
x$time <- paste0(x$year, '-', x$month)
View(x)
x = over_obese1
over_obese1 <- read_excel('data/Overweight_And_Obese_Children.xlsx', 1, col_names = FALSE)
over_obese2 <- read_excel('data/Overweight_And_Obese_Children.xlsx', 2, col_names = FALSE)
library(ggthemes)
library(readr)
library(plyr)
library(dplyr)
library(readxl)
library(tidyr)
library(xlsx)
library(splitstackshape)
library(ggplot2)
over_obese1 <- read_excel('data/Overweight_And_Obese_Children.xlsx', 1, col_names = FALSE)
over_obese2 <- read_excel('data/Overweight_And_Obese_Children.xlsx', 2, col_names = FALSE)
x = over_obese1
x$X0 <- NULL
# drop rows with all NAs
x <- x[complete.cases(x),]
# remove columns with "or"
for(j in 2:ncol(x)){
if(grepl("or", x[1,j])){
x[,j] <- NULL
}
}
# change names of columns
names(x)[1] <- "county"
for(j in 2:ncol(x)){
temp <- gsub("\\s+", "_", x[1,j])
names(x)[j] <- temp
}
# drop first row
x <- x[2:nrow(x),]
# gather x
x <- gather(x, class, percent, 2:ncol(x))
# split class to separate date
x <- cSplit(x, "class", "_", fixed = FALSE)
x <- as.data.frame(x)
# fill class_7 NAS with 0
x$class_7 <- as.character(x$class_7)
x[is.na(x)] <- 0
# create new column that with weight status
x$weight_status <- ifelse(as.factor(x$class_7) == '(Overwt)', 'overweight', 'obese')
# keep only necessary columns
x <- x[, c("county","percent", "class_1", "class_2", "weight_status")]
# rename columns
names(x) <- c("county", "percent", "month", "year", "weight_status")
# fill blank space with 2014
x$year <- as.character(x$year)
x$month <- as.character(x$month)
x$percent <- as.numeric(x$percent)
x$year <- ifelse(x$year == 'Mar', '2014', x$year)
x$month <- ifelse(x$month == '', 'Mar', x$month)
# recode month into numbers
# put year month together and make date
x$time <- paste0(x$year, '-', x$month)
View(x)
summary(x$month)
summary(as.factor(x$month))
x$month <- ifelse(x$month == 'Dec', 12,
ifelse(x$month == 'Jun', 06,
ifelse(x$month == 'June', 06,
ifelse(x$month == 'Mar', 03, 09))))
x$time <- paste0(x$year, '-', x$month)
View(x)
x$month <- ifelse(x$month == 'Dec', '12',
ifelse(x$month == 'Jun', '06',
ifelse(x$month == 'June', '06',
ifelse(x$month == 'Mar', '03', '09'))))
View(x)
x = over_obese1
# drop first row
x$X0 <- NULL
# drop rows with all NAs
x <- x[complete.cases(x),]
# remove columns with "or"
for(j in 2:ncol(x)){
if(grepl("or", x[1,j])){
x[,j] <- NULL
}
}
# change names of columns
names(x)[1] <- "county"
for(j in 2:ncol(x)){
temp <- gsub("\\s+", "_", x[1,j])
names(x)[j] <- temp
}
# drop first row
x <- x[2:nrow(x),]
# gather x
x <- gather(x, class, percent, 2:ncol(x))
# split class to separate date
x <- cSplit(x, "class", "_", fixed = FALSE)
x <- as.data.frame(x)
# fill class_7 NAS with 0
x$class_7 <- as.character(x$class_7)
x[is.na(x)] <- 0
# create new column that with weight status
x$weight_status <- ifelse(as.factor(x$class_7) == '(Overwt)', 'overweight', 'obese')
# keep only necessary columns
x <- x[, c("county","percent", "class_1", "class_2", "weight_status")]
# rename columns
names(x) <- c("county", "percent", "month", "year", "weight_status")
# fill blank space with 2014
x$year <- as.character(x$year)
x$month <- as.character(x$month)
x$percent <- as.numeric(x$percent)
x$year <- ifelse(x$year == 'Mar', '2014', x$year)
x$month <- ifelse(x$month == '', 'Mar', x$month)
# recode month into numbers
x$month <- ifelse(x$month == 'Dec', '12',
ifelse(x$month == 'Jun', '06',
ifelse(x$month == 'June', '06',
ifelse(x$month == 'Mar', '03', '09'))))
# put year month together and make date
x$time <- paste0(x$year, '-', x$month)
View(x)
x$time <- paste0(x$year, '-', x$month, '-01')
View(x)
x$time <- as.Date(x$time, format = '%Y-%m-%d')
View(x)
str(x)
options(scipen=999)
#packages
library(knitr)
# basic knitr options
opts_chunk$set(comment = NA, echo = FALSE, warning = FALSE, error = FALSE, message = FALSE)
options(xtable.comment = FALSE)
# SOURCE DATA
source("read_in.R")
source('helpers.R')
over_obese1
summary(as.factor(over_obese1$weight_status))
over_obese1$County <- ifelse(over_obese1$county == 'ALACHUA', 'Alachua', 'Not Alachua')
View(over_obese1)
temp <- over_obese1 %>%
group_by(County, date, weight_status) %>%
summarise(per_avg = mean(value, na.rm = T))
temp <- over_obese1 %>%
group_by(County, time, weight_status) %>%
summarise(per_avg = mean(value, na.rm = T))
temp <- over_obese1 %>%
group_by(County, time, weight_status) %>%
summarise(per_avg = mean(percent, na.rm = T))
ggplot(data = temp, aes(date, per_avg, group = County, color = County)) +
View(temp)
ggplot(data = temp, aes(date, per_avg, group = County, color = weight_status)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(50, 80) + xlab('Date') + ylab('Percent') +
theme(axis.text.x  = element_text(size = 10, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
names(temp)
temp
obese <- temp[temp$weight_status == 'obese',]
overweight <- temp[temp$weight_status == 'overweight',]
multiplot(a, b, cols = 2)
a <- ggplot(data = obese, aes(date, per_avg, group = County, color = weight_status)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(50, 80) + xlab('Date') + ylab('Percent') +
theme(axis.text.x  = element_text(size = 10, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
b <- ggplot(data = overweight, aes(date, per_avg, group = County, color = weight_status)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(50, 80) + xlab('Date') + ylab('Percent') +
theme(axis.text.x  = element_text(size = 10, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
multiplot(a, b, cols = 2)
View(overweight)
View(obese)
a
b
obese <- temp[temp$weight_status == 'obese',]
overweight <- temp[temp$weight_status == 'overweight',]
a <- ggplot(data = obese, aes(date, per_avg, group = County, color = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(50, 80) + xlab('Date') + ylab('Percent') +
theme(axis.text.x  = element_text(size = 10, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
b <- ggplot(data = overweight, aes(date, per_avg, group = County, color = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(50, 80) + xlab('Date') + ylab('Percent') +
theme(axis.text.x  = element_text(size = 10, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
# plot side by side
multiplot(a, b, cols = 2)
a <- ggplot(data = obese, aes(time, per_avg, group = County, color = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(50, 80) + xlab('Date') + ylab('Percent') +
theme(axis.text.x  = element_text(size = 10, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
b <- ggplot(data = overweight, aes(time, per_avg, group = County, color = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(50, 80) + xlab('Date') + ylab('Percent') +
theme(axis.text.x  = element_text(size = 10, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
# plot side by side
multiplot(a, b, cols = 2)
a <- ggplot(data = obese, aes(time, per_avg, group = County, color = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(0, 50) + xlab('Date') + ylab('Percent') +
theme(axis.text.x  = element_text(size = 10, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
b <- ggplot(data = overweight, aes(time, per_avg, group = County, color = County)) +
scale_colour_brewer(palette = 'Set1') +
geom_line(stat = 'identity', size = 2, alpha = 0.7) +
ggtitle('') +
ylim(0, 50) + xlab('Date') + ylab('Percent') +
theme(axis.text.x  = element_text(size = 10, colour = 'black'),
axis.text.y = element_text(size = 12, colour = 'black'),
axis.title.y = element_text(size = 12)) + theme_hc()
# plot side by side
multiplot(a, b, cols = 2)
source('~/.active-rstudio-document', echo=TRUE)
multiplot(a, b, cols = 2)
high_risk2
